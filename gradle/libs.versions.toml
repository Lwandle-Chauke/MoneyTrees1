[versions]
# Android Gradle Plugin and Kotlin versions must be compatible
agp = "8.8.0"               # Android Gradle Plugin version
kotlin = "1.9.24"           # Kotlin version (must match AGP compatibility)
timber = "5.0.1"

# AndroidX Core versions
coreKtx = "1.13.1"          # Core KT extensions
appcompat = "1.7.0"         # AppCompat library
material = "1.12.0"         # Material Design components
activity = "1.9.0"          # Activity components
constraintlayout = "2.2.0"  # ConstraintLayout version

# Database and Architecture Components
room = "2.6.1"              # Room Database version
lifecycle = "2.6.2"         # Lifecycle components
coroutines = "1.7.3"        # Coroutines version

# Security
bcrypt = "0.10.2"           # Password hashing library

# Testing
junit = "4.13.2"            # Unit testing
junitVersion = "1.2.0"      # Android JUnit runner
espressoCore = "3.6.0"      # Espresso UI testing
mockito = "5.3.1"
mockitoKotlin = "4.1.0"

androidxTestCore = "1.5.0"
androidxTestRunner = "1.5.2"
androidxTestRules = "1.5.0"
espresso = "3.5.1"
androidxJunit = "1.1.5"
fragmentTesting = "1.6.2"

[libraries]
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }
androidx-lifecycle-common = { group = "androidx.lifecycle", name = "lifecycle-common-java8", version.ref = "lifecycle" }
androidx-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
# Android Core Libraries
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

# Database Components
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# Architecture Components
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }

# Coroutines
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

# Security
bcrypt = { group = "at.favre.lib", name = "bcrypt", version.ref = "bcrypt" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockitoKotlin" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidxTestCore" }
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidxTestRunner" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "androidxTestRules" }
androidx-espresso-intents = { group = "androidx.test.espresso", name = "espresso-intents", version.ref = "espresso" }
androidx-fragment-testing = { group = "androidx.fragment", name = "fragment-testing", version.ref = "fragmentTesting" }
[plugins]
# Plugin versions
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }  # Required for Room